import type {Create_Gitops_Config} from '$lib/gitops_config.js';
import {join, dirname} from 'node:path';
import {fileURLToPath} from 'node:url';

import {basic_publishing} from './repo_fixtures/basic_publishing.js';
import {deep_cascade} from './repo_fixtures/deep_cascade.js';
import {circular_dev_deps} from './repo_fixtures/circular_dev_deps.js';
import {private_packages} from './repo_fixtures/private_packages.js';
import {major_bumps} from './repo_fixtures/major_bumps.js';
import {peer_deps_only} from './repo_fixtures/peer_deps_only.js';
import {circular_prod_deps_error} from './repo_fixtures/circular_prod_deps_error.js';
import {isolated_packages} from './repo_fixtures/isolated_packages.js';
import {multiple_dep_types} from './repo_fixtures/multiple_dep_types.js';
import type {Repo_Fixture_Set} from './repo_fixture_types.js';

// Get absolute path to this config file's directory
const THIS_DIR = dirname(fileURLToPath(import.meta.url));

// All fixture sets
const FIXTURES: Array<Repo_Fixture_Set> = [
	basic_publishing,
	deep_cascade,
	circular_dev_deps,
	private_packages,
	major_bumps,
	peer_deps_only,
	circular_prod_deps_error,
	isolated_packages,
	multiple_dep_types,
];

/**
 * Gitops configuration for generated fixture repositories.
 * Points to repos in src/fixtures/repos/{fixture_name}/{repo_name}/
 *
 * These repos are generated by running: gro src/fixtures/generate_repos
 */
const config: Create_Gitops_Config = () => {
	const repos = [];

	// Generate repo configs from all fixtures
	// Each entry needs both repo_url (from fixture data) and repo_dir (ABSOLUTE path)
	// repo_dir must be absolute because it's not joined with repos_dir when provided
	for (const fixture of FIXTURES) {
		for (const repo_data of fixture.repos) {
			repos.push({
				repo_url: repo_data.repo_url,
				repo_dir: join(THIS_DIR, 'repos', fixture.name, repo_data.repo_name),
			});
		}
	}

	return {repos};
};

export default config;
